<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.20.1204.1430                               -->
<workbook original-version='18.1' source-build='2018.2.29 (20182.20.1204.1430)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid_19_india' inline='true' name='federated.1p4b9xq1yi4dai10fvllf0w54hwb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_india' name='textscan.0ztnx3c0k16rum1ceq1u303jjfxt'>
            <connection class='textscan' directory='C:/Users/MAYANK JHA/Downloads' filename='covid_19_india.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0ztnx3c0k16rum1ceq1u303jjfxt' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedIndianNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedIndianNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedIndianNational</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedForeignNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedForeignNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedForeignNational</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([Confirmed])) - LOOKUP(ZN(SUM([Confirmed])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([Confirmed])) - LOOKUP(ZN(SUM([Confirmed])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='%cured_india' datatype='real' name='[Calculation_129197032162086913]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Cured])/sum([Confirmed]))*100' />
      </column>
      <column caption='%death india' datatype='real' name='[Calculation_129197032164364290]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Deaths])/Sum([Confirmed]))*100' />
      </column>
      <column caption='%cured' datatype='real' name='[Calculation_129197032177315843]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([Cured])/MAX([Confirmed]))*100' />
      </column>
      <column caption='%DETH' datatype='real' name='[Calculation_129197032177766404]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([Deaths])/MAX([Confirmed]))*100' />
      </column>
      <column caption='Confirmed Foreign National' datatype='string' name='[ConfirmedForeignNational]' role='dimension' type='nominal' />
      <column caption='Confirmed Indian National' datatype='string' name='[ConfirmedIndianNational]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
          <semantic-value key='&quot;Telengana&quot;' value='&quot;Telangana&quot;' />
        </semantic-values>
      </column>
      <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Min' name='[min:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_129197032162086913]' derivation='User' name='[usr:Calculation_129197032162086913:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_129197032164364290]' derivation='User' name='[usr:Calculation_129197032164364290:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_129197032177766404]' derivation='User' name='[usr:Calculation_129197032177766404:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.481328' measure-ordering='alphabetic' measure-percentage='0.518672' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State/UnionTerritory:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;Nagaland\#&quot;</bucket>
            </map>
            <map to='#246d3d'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#25713d'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#26753d'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#29793e'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#2b7c40'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#2e8042'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#328444'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#378848'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#3c8b4b'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#418f4d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#46934e'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#4a9750'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#4f9a51'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#549e52'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#59a253'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#5ea654'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#61a957'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#65ad5a'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#69b15e'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#6db562'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#71b966'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#76bd6a'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#7ac16e'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#7fc572'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#84c976'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#89cd7a'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#8ed07f'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#94d484'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#9ad789'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#a2da93'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#aadd9c'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032177766404:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[min:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[max:Cured:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[max:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032164364290:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1p4b9xq1yi4dai10fvllf0w54hwb' />
          </datasources>
          <datasource-dependencies datasource='federated.1p4b9xq1yi4dai10fvllf0w54hwb'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:Date:ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-01-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-12#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:Date:ok]</column>
            <column>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]</rows>
        <cols>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1p4b9xq1yi4dai10fvllf0w54hwb' />
          </datasources>
          <datasource-dependencies datasource='federated.1p4b9xq1yi4dai10fvllf0w54hwb'>
            <column caption='%cured_india' datatype='real' name='[Calculation_129197032162086913]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Cured])/sum([Confirmed]))*100' />
            </column>
            <column caption='%DETH' datatype='real' name='[Calculation_129197032177766404]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([Deaths])/MAX([Confirmed]))*100' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
                <semantic-value key='&quot;Telengana&quot;' value='&quot;Telangana&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_129197032162086913]' derivation='User' name='[usr:Calculation_129197032162086913:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_129197032177766404]' derivation='User' name='[usr:Calculation_129197032177766404:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Maharashtra&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032177766404:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[max:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032177766404:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]' />
              <text column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk] + ([federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032177766404:qk] + [federated.1p4b9xq1yi4dai10fvllf0w54hwb].[max:Confirmed:qk]))</rows>
        <cols>([federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk] * [federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='covid 19 india'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1p4b9xq1yi4dai10fvllf0w54hwb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1p4b9xq1yi4dai10fvllf0w54hwb'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
                <semantic-value key='&quot;Telengana&quot;' value='&quot;Telangana&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[Longitude (generated)]' included-values='non-null' />
          <computed-sort column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' direction='DESC' using='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]' />
          <slices>
            <column>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[Latitude (generated)]</column>
            <column>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[max:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' />
              <color column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[max:Confirmed:qk]' />
              <geometry column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State/UnionTerritory:&#9;</run>
                <run bold='true'>&lt;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>No of confirm cases:&#9;</run>
                <run bold='true'>&lt;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[max:Confirmed:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[Latitude (generated)]</rows>
        <cols>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='percentage compression of death vs cured'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1p4b9xq1yi4dai10fvllf0w54hwb' />
          </datasources>
          <datasource-dependencies datasource='federated.1p4b9xq1yi4dai10fvllf0w54hwb'>
            <column caption='%cured_india' datatype='real' name='[Calculation_129197032162086913]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Cured])/sum([Confirmed]))*100' />
            </column>
            <column caption='%death india' datatype='real' name='[Calculation_129197032164364290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Deaths])/Sum([Confirmed]))*100' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_129197032162086913]' derivation='User' name='[usr:Calculation_129197032162086913:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_129197032164364290]' derivation='User' name='[usr:Calculation_129197032164364290:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:Date:ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-01-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-12#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032164364290:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]' />
              <text column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'>&lt;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>%cured_india:&#9;</run>
                <run bold='true'>&lt;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk]&gt;%</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032164364290:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'>&lt;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>%death india:&#9;</run>
                <run bold='true'>&lt;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032164364290:qk]&gt;%</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk] + ([federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032164364290:qk] + [federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]))</rows>
        <cols>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Week of Date: </run>
              <run bold='true'>&lt;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>%cured_india: </run>
              <run bold='true'>&lt;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:qk]</field>
                      <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk]</field>
                      <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-03-08 00:00:00#</value>
                    <value>7.6923076923076925</value>
                    <value>&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Week of Date: </run>
              <run bold='true'>&lt;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>%cured_india: </run>
              <run bold='true'>&lt;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:qk]</field>
                      <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk]</field>
                      <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-03-08 00:00:00#</value>
                    <value>7.6923076923076925</value>
                    <value>&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[usr:Calculation_129197032162086913:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='percentage distributation of confirm case'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;</run>
            <run bold='true' fontcolor='#aa0000' fontsize='20'>top ten most infected States highlited</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1p4b9xq1yi4dai10fvllf0w54hwb' />
          </datasources>
          <datasource-dependencies datasource='federated.1p4b9xq1yi4dai10fvllf0w54hwb'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
                <semantic-value key='&quot;Telengana&quot;' value='&quot;Telangana&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[pcdf:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Confirmed]' derivation='Sum' name='[pcto:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:Date:qk]' included-values='in-range'>
            <min>#2020-04-16#</min>
            <max>#2020-04-16#</max>
          </filter>
          <computed-sort column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' direction='DESC' using='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]' />
          <slices>
            <column>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' />
              <wedge-size column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[pcto:sum:Confirmed:qk]' />
              <size column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[pcdf:sum:Confirmed:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>: </run>
              <run bold='true'>&lt;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>: </run>
              <run bold='true'>&lt;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[pcto:sum:Confirmed:qk]&gt;</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]</field>
                      <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[pcto:sum:Confirmed:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Delhi&quot;</value>
                    <value>1578</value>
                    <value>0.12367740418528098</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='state wise number of confirm cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1p4b9xq1yi4dai10fvllf0w54hwb' />
          </datasources>
          <datasource-dependencies datasource='federated.1p4b9xq1yi4dai10fvllf0w54hwb'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
                <semantic-value key='&quot;Telengana&quot;' value='&quot;Telangana&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' direction='DESC' using='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[max:Confirmed:qk]</rows>
        <cols>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='statics of a choosen state'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.1p4b9xq1yi4dai10fvllf0w54hwb' />
          </datasources>
          <datasource-dependencies datasource='federated.1p4b9xq1yi4dai10fvllf0w54hwb'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
                <semantic-value key='&quot;Telengana&quot;' value='&quot;Telangana&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Min' name='[min:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[max:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[max:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[min:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Maharashtra&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]</column>
            <column>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[Multiple Values]</rows>
        <cols>([federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk] / [federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='15' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='160' h='100000' id='17' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='10750' id='19' name='percentage compression of death vs cured' pane-specification-id='2' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]' type='color' w='100000' x='0' y='0'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='70250' id='1' name='covid 19 india' w='43500' x='-250' y='3125' />
        <zone h='9500' id='6' name='covid 19 india' pane-specification-id='0' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[max:Confirmed:qk]' type='color' w='19750' x='73500' y='1375' />
        <zone h='36250' id='7' name='percentage distributation of confirm case' w='31250' x='43250' y='7000' />
        <zone h='35375' id='12' name='percentage distributation of confirm case' pane-specification-id='0' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' type='color' w='16083' x='74750' y='6875' />
        <zone h='4125' id='13' name='percentage distributation of confirm case' pane-specification-id='0' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[pcdf:sum:Confirmed:qk]' type='size' w='13500' x='75000' y='43125' />
        <zone h='28250' id='14' name='percentage compression of death vs cured' w='47583' x='43750' y='44250' />
      </zones>
    </dashboard>
    <dashboard name='coivd 19 india date wise anaylis'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='covid_19_india' name='federated.1p4b9xq1yi4dai10fvllf0w54hwb' />
      </datasources>
      <datasource-dependencies datasource='federated.1p4b9xq1yi4dai10fvllf0w54hwb'>
        <column aggregation='CountD' datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
            <semantic-value key='&quot;Telengana&quot;' value='&quot;Telangana&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='19' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='22' param='vert' type='layout-flow' w='98666' x='667' y='1000'>
            <zone h='5250' id='23' type='title' w='98666' x='667' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='20' type='layout-basic' w='98666' x='667' y='6250' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='24000' id='1' name='state wise number of confirm cases' w='74083' x='417' y='1000' />
        <zone h='9500' id='6' name='state wise number of confirm cases' pane-specification-id='0' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]' type='color' w='15917' x='76917' y='5625' />
        <zone h='42375' id='7' name='statics of a choosen state' w='36667' x='333' y='29375' />
        <zone h='6500' id='12' mode='dropdown' name='statics of a choosen state' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' type='filter' w='14000' x='78417' y='14250' />
        <zone h='42875' id='13' name='percentage compression of death vs cured' w='53583' x='38500' y='29000' />
        <zone h='9750' id='18' name='percentage compression of death vs cured' pane-specification-id='2' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]' type='color' w='11667' x='79167' y='21250' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='covid 19 india'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[max:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='percentage distributation of confirm case'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[pcdf:sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]</field>
                  <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[pcdf:sum:Confirmed:qk]</field>
                  <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[pcto:sum:Confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Delhi&quot;</value>
                <value>%null%</value>
                <value>0.12367740418528098</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:Date:qk]</field>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:Date:ok]</field>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:ok]</field>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:qk]</field>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='percentage compression of death vs cured'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='covid 19 india'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='percentage compression of death vs cured'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='percentage distributation of confirm case'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
    </window>
    <window class='dashboard' maximized='true' name='coivd 19 india date wise anaylis'>
      <viewpoints>
        <viewpoint name='percentage compression of death vs cured'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='state wise number of confirm cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='statics of a choosen state'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='state wise number of confirm cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[sum:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='statics of a choosen state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]</field>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[none:State/UnionTerritory:nk]</field>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[twk:Date:qk]</field>
            <field>[federated.1p4b9xq1yi4dai10fvllf0w54hwb].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      /wAAKBrCM0y9iwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='124' name='Sheet 3' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='coivd 19 india date wise anaylis' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='covid 19 india' width='192'>
      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
      Toh2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='percentage compression of death vs cured' width='192'>
      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
      JgcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='percentage distributation of confirm case' width='192'>
      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
      D1TPui/PJNoBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='state wise number of confirm cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WWwdWZrn94u4+867k5f7vkgkpdSSe2VWVld3zbQHPTPuxsAewBjYwDTs
      h3nwiw3YMMr2kw0DNgz0k2HDyzTsxrg9aLunuqqrMrOW7JQqMyWRlERS3Pfl7vsaix+ozCLv
      DVJkUhSZuvEDEkreL27EF3Hjf5bvnO8cQVVVFR2dJkW8bAd0dC4TXQA6TY0uAJ2mRheATlOj
      C0DnQpAqeZ7NzbKXyHHqKItSY/rhQ3ajcUAhFouf6mtyrcLi3GMeP37Mxn7yTH7qAtC5ED77
      +CfEC1X2d/eZ+flfs1E8ap/77K9YSR39rJzZZyeT5Rc//Rio8LO/+fkR+9bCM5LlWsO1BEHA
      KMf520+fYBRPeqUlHj+eZfnR3/FkOw2A8Vvcm47OC+mJtPKL6afcunuHh7+9h1qw8cNRP//6
      r36Cvf8mlsV7FHdd3GzJ8MsHc7Rf/4h32otE+kZJbO5/c54vfv4XzMVFEgWJGyEzEaPE//3z
      eyiygFX0YAsUqIjD/Ht/0EswbKTNA//rn/0PbKdr/Nt/+Cb/8m/n+Ee/P84vfvIVb//oQzaf
      PMFaWmdV3cXwblivAXQuBldkiH/3H/8+9z/5jP7hQd754EM25+cZvDFBPlVibHKYd957n63V
      Fcbf/pDxvjBLm1kGO3zUqgVKhTRlxYpiMHPnez/Ca62hKiqF5C7h8Q+ZCMskpRZ+8A/+ADGT
      /ea6ajHJZsHER9//gBabSPf1t7g1GCHYPc733hhERWBkbJJ3PnqfcmwHw49//OMfX95j0nld
      Se8u86vPp5l870PGBiM8/HKKweE+ovECg0NDjA33MfXoMe+9/yarz5ZwukSSJRfjQ92E3SKf
      fv6U937wES0OC25vALvFSFu4lba+MfIrDyh6R7kz1Eog7MUkmgm3+sBgpa2zC5+xwHosT09/
      H063jzavA9FkpzXkAQz0DfTw9Itpxt97F0EfCda5CsTmviQZHGc4YH2l1700ASiKgnhih0VH
      5+K5tDdQluXLurSOzjecOwoU21jg6coONl87Q0EDj2ZXCfVco9NR5MGTVYK9o3RYCzyYWycy
      OMFYd+hl+K2j81I4dxNIlqokY3us7mfxCDJd18eZn5nBbISB0essPZ6lKCjcmrjOzMws4+PX
      UBQFRVEQBOFl3YeOzrfi/OMAqkI6ncNgMICqIggCoiCAAKIgIAgqCCKCKAIqBoMBg8FArVbD
      ZDKd/w50dM7BuWuAjYVpVnZSqNYWrrWamV7awd8+SKe9yPTCNt72AdqtOWaW9wh1j3JjqAOA
      Wq2GQQWpUGo8qShg9rjO45aOzqm4tChQrVYj/vFvuf9P/5MGm72zlT+Y+stL8Eqn2dDjkDpN
      jS4AnaZGF4BOU6MLQKep0QWg09ToAtBpanQB6DQ1ugB0mhpdADpNjS4AnaZGF4BOU6MLQKep
      0QWg09ScMx9AYXV2mo14gbGbbxBbmCaaqzJ2622KW7NspSRu3r7B3sI0uwWRW29MYjPpmtO5
      Opw7IcbfMUg4EGUtkaNmbeHDW6PIxSTbqovxATPbS7NkxBBjbRV2kxn6wt6X4beOzkvhnAIQ
      UcspVlMiQ/1+5h4t8MkvfkZHzyg2uw2rzYZcXsUa6MJuh2hZRpblb1IipWMS41VVpVqtns81
      HZ1TcE4BlPntb6cJdrSzn3QiGmy4nTKYrGS3FniwrdA1MMbGsxm+RGBo8vaRlEijwaB5VkEQ
      MJvN53NNR+cUnFMAZt754H1kFSw2BwHnKFUZXE4HUquLsgROu41Qy22qkoDDbns5XuvovCTO
      3QRyuj2/+9Ns5Ot1vUwWGybL848tdsyW811JR+ci0EMyOk2NLgCdpkYXgE5TowtAp6nRBaDT
      1OgC0GlqdAHoNDW6AHSaGl0AOk2NLgCdpkYXgE5TowtAp6nRBaDT1Jw4G1RVFWRJ5usdNETR
      gMFwWDMKK7PTbMYLjN24RW5rns2UxJtv3WJ3YYbtVI0bt2+yvzDFbsHArTcmsJm0cwB0dC6D
      EwVQyuzys7/5hOWtBO0hO6aOt/jjH0wcOSbYMUhrIMpyNI4sWbk7bODZs00UXEwMmtlZmiUr
      hhmLVNhNZvWUSJ0rxYkCsLe084/+nT/i//rffs677/dy/3Gx7ggRuZxiIyUy0OVifUPF2mKm
      tpDAEfFisR6kRFoCXdhtekqkztXjFAkxbt57Z5DZ5Sjvfe+dOluZL+5PEehoJ5Fzk42t8Pmu
      TPfEXXbmpnmwpdA1NMbG/AxfIDCsp0TqXDFOIYAqn3/yc7xDd5ieXqbtw/FDNjPvfv8DZBXM
      VjvhO29RkVUcdhvhO7ep1J7/v+cOVVnAbrMeexUdncvgFAKoUCxDYXERV9fNOpuIw+U+crqv
      d/41ma2YnhfiJosNfUdgnavIKcKgTiZvDlGWZPr72y7eIx2dV8gpBJDh0eMEb719B69Db5fr
      vF6cQgAWkFKsra0RTeUv3iMdnVfIKfoACk5fO+Pj4zi9egxf5/XiFDWAkZGhLqLRKNl8+eI9
      0tF5hZyiBpCIZSQ++ME7GETh4j3S0XmFnKIGEEgsPeB/+T/+nL+bWrl4j3R0XiEvEECF6a+e
      YLC7oFqiUpNejVc6Oq+IE5tAxXSGUHc3rpZO+gb0MQCd14+Tp0PLZT75N/+amadZro1303P9
      Hb73xsCr8k1H58I5UQAOXyf/5J/+B4w9eobd48TlC74qv3R0XgknR4EEAaNJYeqLh/RPDKOY
      PUSCnhO/8jJRJYna9JSmzTQ+gaDPGNU5J6cIg4oUczHW160IrvYGq6LIKCoYDSJSrYasqBhN
      ZlBlZFnFZDKhyDVkVcBkNCKcIZKqlkvk/qv/QtPW8j//7xgCgdOfTEdHg1MIwMYf/7N/higK
      qGZXg3Xl6ZdEJS9vT/bxxWe/QrA6GRwbZ+3pIwoVhcHxa2zMPaUkwbVbbxJy61Oida4OpxBA
      ll9+MsOf/MMx/tXPZ/gn//BoUszA2CS15X1QwWQWyReLFLJZXB0DjHvtrCxO4ey9yU17ltVs
      Hr/DdOqMMLVWO9YrqVZD1rPGdM7JyVEgRaZctTPcDf/yX33Knd/7o7ojFJKxKKlUkkzBS7Ct
      j7CSIlOQKGZjrGXBEuhnb3ORRatKS9fImTLClOrxWQRGkwmD3gfQOScnCiCzu8zsvsDb7/2I
      6zc2+fkXG4x2tBw6QqVQqODz2CnXBJw2A6lyiLH+DkopC7GCSndHKwGHgWTZQMTnvODb0dE5
      GycKwGwxsbI4Q1+Hl8TSDDVTf90RBjr7hw797ebrbqnTF8bpe/6pvw03OjpXj5NXhQj08Ptv
      VXj44AscgS7+3pvDr8ovHZ1Xwgs6wQKh7hF+1D0CqCjKK/FJR+eVcYalEfM8/PLZxXmio3MJ
      nEIAee795gHJvThVk54PoPN6cQoBWDGWlvlv/+wvaG3XZ4TqvF6cQgBVHJHb/Jf/6T+nkstc
      vEc6Oq+QU80Fmv7NX/KzfyPQ/+4fMnrFZkPn/+v/DHl3u+Fz+7//H2K6/eYleKTzXeIUAiiD
      MUB7p4FSInvxHp0RJZNGTSUbPlerlUvwRue7xgv2B1BRVTd/+Cd/xN7OFq7Wvlfll47OK+FE
      ASQ3HvHf/fd/jru9A3+Lk/4bFtp8+mCYzuvDiQLwdlznP/oXf0o8mWJ3bx+3vrrzt0LdWkXN
      pRo+FwKtCMHIJXik8zUnCkCqFFh+Nk8sX0U0Wwm+wmyw1wnl0WeoCzMNnwtv/QCDLoBL5cQw
      aDG7z7PFbUqlIoVMko3t+KvyS0fnlXBiDdDSOsKf/ouRE0+QiW0RK5vo7wixv/6M1aTC3Zuj
      xDcWWEtI3LwxRmJtjq2cyI3xYUz66nI6V4hThEFPplytUilJKLUi28kaY0GV2eVdygWVgbCZ
      1aUFUkUzPa4aW/EMvaGWF5/0JSI/+DuU1cY5TGL/GIabb71SX3SuHucWQLi1jeTyPopaw+n0
      4m63UP18H3eXH6fbTnR/CmfoJl57lnRROtMmeadJiVS/2cS1zi7LUK2ibizD9BcNdsVsRb72
      xre76TMiKApa9Z4iK3pa5yVzTgEcpEQmkwnyIS+Z5CaL0wqe/lESG6usZtRvUiIXLCq+npef
      EllG0JSA0WDAbDZTEw1ozeIWRRHTK0qplEVR00fRIOppnZfMOQWgUihWCXidVBWR0aE+4kXo
      afPRapWI5xW6OloJOIykyiJtXj0lUudqcU4BGOjsGzz0twvX8zRIpzeE8/l+Gm5/q54SqXMl
      OUNCjI7O68e5O8E650eZn0L96tcNnwvhDsQf/uNL8Kh50AVwFahWIKMxo9WpNxwvGr0JpNPU
      6DXAS0BNJ0DVCLY6PQgmPcx5ldEF8BKQ/vx/hHxjspDhT/4Uoe/kqSQ6l4veBNJpavQa4AWo
      Ug11e03TJnT2I4h6GfJdRhfAi8hnkf/PP9M0Gf/j/wbMllfskM7LRC++dJoaXQA6TY0uAJ2m
      RheATlPz8jrBqsLy00dsxvOM3XoHNbFykBJ5c4z42ixbWQM3J/SUyG+DqihQ00icEUAw6yt1
      nIeXJgBVkcirdj788BZKOc2DjMpAq4XVpWekixa63ZeTEvlakNhH+cv/qfFzUcTwz//zV+/P
      a8RLDIMK1LK7fPKLbfqHx3B7Pd+kRDouMyVS0b6GoihUT5OOWKtppjMemGqAACqax0iyBNXq
      C1MiBUnSbIuqysFzONYOp7sHnWN5eTUAMv5wNwE1Ta4gU8jss5IBS2CAvc0FFswqvt7R71xK
      pGoyIR1jM5lMCGYztWMUYjQYEc3mF6ZEKkajpl0QD56DajRq3oMAmPWUynPx0gQgiBbcTgvp
      citjA+0U0xYSBZXO9jBBp54SqXM1eXkCEAT8rR34n/99OCXS5QvTuMe8js7l0/RTIZT1RZQv
      ftnwudDix6BnY732NL0AyKZRF580fKyG29Huoei8TugDYTpNjV4DvCYof/MXoBFWFt79fQRv
      AHV3A0qFxi/6wggtvlfg4dVEF8DrQjIGskbAVnr+2bMZ2N9qtN94G5pYAHoTSKep0WsAnZeD
      ohzUMlr0j8AVnbOkC0AHAHVzBTZXGg3+IMLw5ClOoML8tLato1cXgM4VJ5uG7VUNw/NJGoko
      PPis0Wy2wId/eKGuXSSvRACFbIJcRSAU8KHPhv6OIkuaS79c1ZL9tFy8AKQ804+XsBhVFOM4
      Ea/jwi+po3NaLjwKpBYSuLtGuT7QQbZQuujL6eiciQuvAQSznWIqTkaqYbHrs0GbmrkpKOYa
      P+8egkD4oImlNVhntYHrYhKpLr4JZAvQZt1lNW3kZpe+2nFTk05AtnHDcMIdB/9ur8HGUqM9
      0g3Xbh2EWrUG+wwGEE8xc0vj+6+gEyzQOTRB58VfSOd1J7YLM40bHjI0Dt0DsL8N0Z1Gu8cL
      XQOQisOjz4+YBFVVtXMKL4jDKZFKsUxxcw84SPz+eplB0WTE0d+JoKrIW5sH9uduCsJBGMnQ
      3oEqiqj7e98kjCuqivjcLviDYLMh5LOoz6tVRVEQn19DsDlQnW6Eahk1m27wQTCaUFv8CIqC
      mox+48PX1wcQAq2ogJCKfZN6qSoqwvNQl+DxoRrNCPkMVMrPfVQQheddL7sT1eZAqJS/aRoc
      9hGjGdXlQVDkb/YPUFUVBOEgxVIQwBs88CubOojFA6qqIHx9DZcHVTQgFPMg1RqeEzY7qsmC
      UK1ApaThg+nAR0WGQr7x/IJw8BwBcpnnT0blwM3n13C6UQUBoVz8Zr7S4WeN1YZqMCLUKvA8
      xfPINUxmVLMFQZahXGz8LSxWVKMJoVaFWqXhd8BgQrVYERQFyoXf2QXh1Qvga2q1GibT8SmP
      kiQhiuLvfog6VFVFlmWMxuMrsRdd4zQ+GAyGIy/9YRRFQVVVDMekdr4MH15kvwo+yLKMIAiX
      +lt9W/ulDYQd97AO24978b7mRfbTXOM853+R/WX48CL7afy4aB8EQbj03+rb2i+tBjiCVOD+
      J3/LQkqgf+Q6704OHDEnEglKmRjJfBWT08doX0fDKWJbyyxvxSjLBt66ewur6egNl3Mxni5s
      43DaiXT14rbVlQa1HJ/+7GfsFkQGJu9yd6TuGorEzL2PeRqt4PGE+fsfvdngw/76M/bzCmar
      g6HeTsS6Ub9ieo9na1FsdjudXT04rIfKH1VFyWzyKGFjwldmNmVhsi/U4MOz2acoRguOliBd
      rX7qWZy+z1eLm5isfv743/qowb699BTZ00VXUDtJVSnF+av/7xfIqsDo+3+fa5G641SZhScz
      FCSVUOcg7YFDdrnC4uISpepBM8do9zI20Nj7W3k6jaNziLDbpulDJbvH//uTTzGKBq5/9A8Y
      DPzuOKmUYWltg0yuhsloZOjaNZyWo7WfUs3yaGYJh9NOqKMXn7NuAeNagS8ePsZqs1+RqRBS
      mZrZSdhvRdbo5ft9PlJyGcWkYrZph1KDHf0EO/qY+vI+VVlpFEA2idnbzkhfUNuHWgHJ4qHN
      bqJa04g0qAr5mkAw2Iogay/XsrEZ5fo772M7pjDKJGI4g10MtmuE9JQaqytLLO2bMIbthHpH
      G4+RK8RyMm+/NYLhmAI1mS3TGm6lXNVeDsbltvPbmYckQ0EGh4ZwWI6+AkolCzYf3R6RfEnj
      OVSz7BVNvDvRzudP12gPjP/OZrAwOHKNSj7Fxk4U0az9enm9Nr766iuCoSAjw4NYTUdf4Fop
      i9Hho8tnIFc8eh9Gm4eR7hC/epomYE6TKUoNApALcSqWELfqC7GvEaBSUYi0+69IDaDKFMtV
      auUSJpsLu7WudFZVfv2rT5m4dQeT0YTD1jj8/nUNIJid3Jy8hrnuDSmn93g0v4HNZqV7YASv
      43fLiRw8AoVyuUqlVMTi8GCrezFQVarVCpVKBQxmXI5DpZcis7Y8TzSeRrDYMVqcTIwOYDhU
      A8S2V9jYiVNTBMxWKwNDI421kFxl7skMyXyVzsHrdIUOhY2reabnlijki1htNlyBCINd4Ybn
      UCmVkBSJclXF7z0adpZKWfYTaRLJNBjMDAwMYK+7T1WVKZcqlMtlHO4WzMbfqVkpZ5iZW6ZY
      qmCzmrH72xnubm3w4bef/pS44MQqCPzgg3cb7LVihunHs1RFGzcnx7GZj77AqiJRLlcolys4
      PV5M9WpXZZbm5igKdoaHerEcsufiOyxt7FAo1XDYLbT1jNLqratpyik+/mqZu5PDVyQfoJbn
      0cwirhZf48svlZmffYxUqbKwuMz6duyoXVXZ21xhaW0Xp9uDUqugKI2aNljsKOUcyXicinzU
      Xiskefz4KYuLi2xsbZPKFRt9VBUWns6wsb1LIp0/ahMN9AxeI+ALEHQZyRaKDev8BNv76O9u
      I+ixk88XqCgaRXhhm9nVKGaTmXihctRmdjJ5fRR/KIwoFSmVtUfVY7vrRGMxVjZ3G2xGm5u2
      tgid7RHawiFMxsafX62kefDoKfvRKPny0ZpOtHq4MTlB2Cmyn8hQqmjXhC2+EAGnGeMx84Tm
      ZufZTpdwGyuU5cbfqlpIMv14nv1YjGJFoxaSyySyRcxGUOWjKya5AhEmR/rx+AJYDMeU7UYL
      xmqWpaXlKyIA0YJFzfLw0RTre3XbhRrM9A2O8O6H32fy2igD3W1H7YJAa2cfVqNIZ/8gVrFM
      RWpcRiobXWcjLdEVchDPH32oZqefiYlxAi4zlUqFmqy1DJVCoQJDIyP0tGs3o5LxXZY2UqhS
      TlOE5XyahzMr+N2Qzmu8PPYAowO9iEqVFrvGy6PK7Kw9JVNzkknGj9rkGisLs8RTGX79m/sY
      jtmcb2PxMdvJPJIkoVX3q7UiBmeYkZGRxrYzQCXD1n4UsztMUWtyHOB0WhEUFTMSu8l8g72t
      tY2hDj9F1YrZ0PgKSuUcZk+EkeFhPHaNyI5coWZwMjLYh7Wu9sgldnmytMnW/ANW42WMWm1F
      o42xoW4kqYbhxz/+8Y817+JVoaoopRTbZSs3+oKs7KaJhA6l6MlVNjbW2d3ZZmsvTrZYI+Rv
      bEMHfU5WVzcxO320hby/i3M/x2S143fayJYVurrasRrrHkx+l8++fAzWFiTRRMRfN2qtQj6x
      xfSTeWIFhY5wYwfUZTcQLwt0+r14fb4GH8wWC8l8ma6gH08g2OhDOcXCvsLd2xN4HebGyIlg
      QKwWEN1B/G4n3pZDPgoiHp+fgN9Pe0cEt9OJ097Yyaxmk2wl8hgMIm6PB1P9C6iqLM9Ps7S8
      gtEdpuVQUxFVRRJEbA4vhkoGX6idFpetwc/pJ3PcfvMtVhefkswV6emIHL3NXJxkQcHhdBLw
      thxpKqajmyxvp1AqGXZ2drG4A9jrXnJUyCT22I2lcLd4j9RkZpuDYDBIqLWNkK8Fh9N5pBn3
      9XN+8OWX5E3Bq1ADqGxvrrK2vMT8yjbhYN2LZbTQ2zdINb1HomogHdMY6QOy6TSrq4usr29Q
      lTSq1XyKtd0kZqv1YFCnHquLrp4+bEoRu1Vr2yOFbCpOTjGQTcQ17PBkbo1KOctedA9JowaI
      7ayzFUtRKabYT2s0YYxOpMw6D6em2UtpzImRimxsbBHLFtjcrWviCAKiaODpoy/57Muv+OLB
      lKaP+VKZrv4hRgb7GtreAGotz348g1Ipkak23kMynqCYz6AazWS35pjbTjcc0x/xs7i4gNPX
      TjjQmG8cjSZo7xtgZKC34eVsCXUy0hPAaDBTKaRJlzWqKVFEKaaYX9qiWldZC4KIWtjhp3/7
      S6a/+oKVRLnx+yYbrT3DeNT8FRCAINI5NMlQxIfJbDlSGhzGajFTTO5SVrWr9tXNPcw2J16n
      gWpdE0iqVsjlslhcfjo7OhpLFACpQl6ycfuddxnpDGhew2j34rNbMZm0B50mxvoxKhL2lrbG
      jhsQivTSF3IQLZrpCtobT2Cy0eZ3UcjlNJtxGO0MDPQj5GN0dvdr+iAaLIR9LRiPGRTyBQLs
      rz1j6vEsBa32tSDg8wVx2S3I9U1BQSAUClIulTEajfi7R+gNNYZTJUVBkaHFF2BkoO+IbXtl
      jkJNYWXuCQ8fz1GuNRZGqiKxsrZFyOekUNEorMopEoUKaq2ibf/mHszIWs8RAbOtBYdFuCJh
      0FqBrGzlxoj2nroq0HPtDq0SR6v9Q4wOj5KvFsgWVBx1YbFiLkWqoGBWi2ysLRPoGiboqhOS
      wU4l+YiHj3K0dvbSEfQctQsGOjo7cRbKKKqBXKmKy/b8HKpCKhEjV6gxODCIrDSWK4VMklSu
      QGd3HyjqwcSs+tHb7AaPV2N0R0IkcmV6DkeB5Aq70QRVo5vhfi+ilogBV6iV8a4ultfWNO1S
      rYpgMGG1WhuaaACi2cvEGzfwtzi1Fy+WSqQqRt6dGOG4sa3daIab776HWcMeCEfAbCeZyoLR
      2LhqtlShKnq4MTkKqPT6NQo8e4Abb7xJLpkkUPc7VgpZEjkYHulHlSR8IY2xhlqJ5ZVpTPgu
      vwaQiimm5jcQq2kePXrE+m5dJ1iVmbr3G/bSBbLRVabmN+vsKlsr8yxtbLCzvc/8s3kqtaOq
      d3uDeMw1VEcAj6HIXkZjSXGjjZ7ONsLhNmwWjdJTqfF0cQ2v18vy3FfMLKwdMgpYbHaeLSxg
      dzhYXVlAqotuGC1W8vFNUmWRcnKd7XRdJ1hVUR1Bxof6ERWJgLuuhhAMOMzwbHULm9XIs6XG
      WZOZ2Db37t/n8ZPHrO80NtMURSaXyRGIdDPY190wVgKAwQiVNI8fPWBubQ+lvqcsWnAIRaam
      pljVuAZAsMXGzKMpniyuN9gqpTypvIzXaUEwmDDWNYFUQcRsseD1tuD1ejU7yVTzPJx+SglD
      QxTIYDJjqURZikk4pCjzuxoRPYuH2xN3uD7ed/kCMNq93Lg+SLCtE6WYplStezGKcbKWMP2d
      EXqHb5CL1z1UQSDS1UfAY0OSVW7dfauhBkCuksgUKST3yRnCjLVrDKYVd5mdX2EnGmNuba/R
      Lppo9dhJphJ4Ap24DkdpBAG7w8VEb4T1nX0MZntDU85itdPV1UMlGydbVvE66ipfucJeNE1V
      qmK02Yktz7CXO/QsRCNuX4iIy0Q0Fsfp8ja46Am28/333ybgDzAy2NhEim2vkZMMZPbWmHoy
      982I7VE/akTjKSzuEB4lznaq0nCIyWSgVMiSymr0UwCXy4FqcWETG88/83SJdrfMYlKB/C7J
      umhYIZticeYe96ZXWJu5x0LsaBterpbYi8WRFAMtHnfDczaarXg7BnFUYuyma7S2aETTKmmm
      Fld4dO/+FWkCSVXWl6ew2yKUkinoPjTAY3LQYooyPz8PgMdfN/Ciqjy89wl50Ud72Echm0Ly
      2DEeLjlMNrq7O1jeSLK3vYLZ10avv66ja/PTHvKwHU8weqOr0UdBZPTGbWRFYWjIoLnhhWow
      sPL0CWZ7QHO9f1UQ2d1YxGiy0VnfSTZaaQt42NuPIksywc5e7PW/jgoGpcDjhSit7X1osbu+
      ykamjMVoo/2HHxyxhTv7qdXmyaUzbBUUCjUVe91jUEpxJHsHE4PHjJgbrVy/cRu5mOTenHZA
      YmFphYqrnUIiQ39/vZ81EvEExZxIylClte5JOb0hhkdGSD+NYTZYMNRHygBVMdLX30E+m8Tm
      cOMxHm0GCUYHrX4rsZyIVdT4JUx2WsQK1tEbV0QAFi9v332XUlXGbKvrVJmdTE6Ma3/vOTff
      +b1DMW1BsyMtoLK5k+DagK+hk1zO7PNsO8vg5Js41xaQtaZCKFU+/fgTQh09ONx+zbGAla0Y
      Pl8AEA7GAer8SMf3qYoOBtpdZAo1Qs66ppbJwfVr1ynuLbJYMtBdP1IslYnnSngDEeSqdulr
      sTgIec3kGgvug+egSizvFhjs9yJrDEIJZjc785+h5jvp7Bsh5KkrQaUyT548IV+S6OrT7rNd
      v36Nx0tb+DuHGmxvv/chqgo9z/9unMWqIphbGOk3YHEM43EebcMbzDbaOjtIPbX90WAAAA7v
      SURBVHxIxe6jR2OcQEouc+/JJiPtbvYLEqG67pyCgZ6BMdZXF6+IAGpZHn3+KTs1N509vbw7
      OXi276uq5qDOYZz+Tiav1ciXZTpcR2/b6gkziMivP/2Ua7fepkNzHzMBoyAgGoyIWu1S4MbE
      BMVaiUJZ0ByACXUO8oOWVtLFKm1+jc5ZNc+j6TnkcpnQsEYKkcnO5K23yecyGGzaKYLtnRGs
      hRoRs0aUCWjrGqAsGyjJBty2xk6uYPXwxsQo6UK1oSBR5TLTj6YoywbGbt7Bba2Pz9d48mgK
      yWDHYTOSz2WBozW2wXDyK5feXmYhVsbrsJBeXqbvjbfxH/KzVkjydHEDpVYilcpTrcoY66Zz
      iA4fQ10R5GoOd10/R87t8tPP5xns72E7Xbr8PsABKhZvGJ9FPHY/rpOI7qyzuLjIwsICC6sb
      mjH49N4ynz1aoJLeJ1o8WgNUC2k2dhNE2tspJPeIphpHLxEM9HaFKdSgUtDIawVWlhaxtYTo
      7ghrRljS0S1SkoWers6GQTBFlqiKdsavjXFt8iZdAY1+ilxhcXmLUHsXYb+n0Q7Mzi8RCAUJ
      +bTt60tz3H+yjJzdJ1cfRAfkzBq/+mKWbHyf7ezRYIGcXCNn7+FWr4PH6xqpjaUMcdlBwFLE
      HBqmkNnX9OEkNnfj9PYPMjg4yEiHndX9ozWdyeHjxuQEAZ8XIzU0KjEMVj+37tzgjes95ItH
      q0LREeSdW6OUMklKmdQVqQEw0NLaz+27IYTT5HYeRhBo8QVRhBTJdA5kBa0GuNnmYiASRKJG
      ffDD7GhhZOQFSdeKxNraBtXgCIXUFoP9PQ2HBL0m/u7X9wi1hhkf6W8oQR0OGw8fPiQTC9E/
      OHxkMtz+2hx5aye7i18SabETs/Xz9nBdf0cwIpRjfPnlQ4JtHQx0Nk6GCziMzM4vYre7mRxt
      7Cc4nB4GI2WKiJr7HwgWF73tbYhyvmFCoWBxIxSjLO9XUcpbbEeNtB+uLY0WHGKJREGmUtrC
      bNcW4UkMDvUz83SKXbuVYgkmb2uEvYtRFpbX2M1bGB5XcR1qpVWKud91zrNRCurRmlYQjXgD
      rXgDrUy8cfOKCEAQWZ6+TybVRzjSRXfr2VYrtjk9hM0myuUKNcHYuGVjOUM8r2Bz2lAUK6mt
      Zdrco1g0OljHIhrp7elmdmuHUHddE01VWJ6dIpav0t7Vw7WB9oavJzaeMb+bwRtsY3J8pHGa
      hMlELpfj7lvvk9mcpWCua9sqZb68/xU11Uz/8HXCHq3RaqgKdt64OYlFowbaWp3D6Onizt1O
      nsw8pj5Ylk/usb4Tp6ZUaGkJEKjrhRvcEd67czCtQbP1b3Zx59YtTb9Oi9Ud5M6bgYOUR/GY
      FoHVQ9/gGJ7dPex1pZloMGK1PleEdYBbjuM35xIE8Yo0gUx2Pvjo+3S2hRs6Padl5sEDXOFO
      ersiGOs7wVYPXR0ROiNthFtbCfnd1CTt+fKayDWi0RgGd5jxsRFa6+cJyVU2MzXevHuX+N6a
      5imerO3z9pt3kUtJahr1tr9ziFZLgflnz0jg53pXXSGQ3qTg6eOtaxGebUaPddVtq/GrX37O
      9FzjOp/tPUMUd57y048/o2NoAlddJ9vpa+Xa2CiKIDI+Pk7A/e1Wfdva3j7y71n5Or3y2OJJ
      KrObrHDrvfca+iEmi42WlpZv/rMcM2r/NZc/GQ6gkuH+rz5mbrdARRbpPGMNAFCK77CZKVEu
      VWhp8TQ0P7L7K/z1J79FysaxdV6j1X2G7UVVhVK5TDaxQzQvo0gy/ro2dimbIpHKoEgyubKM
      r8V9dJJYrcB+NIEkyRSKJexOz9F5MIKAyxugtbWVoL9Fsw8Ri0XJF8vI1RKyYMLjbOzoWm12
      KuUiGC20Bo6OFST2tsiVJQwmK1K1jMPlPjIZrpRNsrm9y87uHkZRRDA7GmZbvoh0bJtPf/M5
      BlFgfSdBb1djbXhuVNjdWGQ/U6SlbjLcWbkaTSBRwB5ox5cuNaQRnpZCTaGjN4LHatYOg4oG
      2gIBzGZZc6ryiRhMBHwtLEzdp+Qfpri3xVD/obEC0cjo9ZNXUO4ZGDvbNeux+blzo3EGaj0P
      HzwkJ1qwUISRo32AQFsXgTaNMY7nWBweOqxOOjoPjjEYj08yPw6XL8ytGzcI+D0EWi9oMRyj
      mZDPxUo8q9kJPtOpXo5H58TopK01QigMjhbtiWgvoru/n2gqSaxowW63IR7qwKlylVReYfLO
      HeyUqBwTxjwR0Ug4HGR+fxt3W7fmIYtzc/SMjGI6RsOlTIzP7n+FIJqZfPt7BOvHAV6EKrE0
      8xXzezkCrT28pREuDodasVXLZMuN95hNRg86iKIRVVFp6+jAcqj0FA0GzCesLnEaDAYje7ub
      RHf3yMgqf+/73zvX+TQpxlje2GYvb6JQVY50gs/K1egDlJLMbybx+f04bN9u5/NCJs3DqYc8
      fTpHta5YWJh5iGJzszJzj5mVGM6zXqMQZWYtTt/4W/zoow+4fV17JqZVSfOzX/yGqdklZI1a
      JhHdJlkW6W51ki5qZ1OdSK3ETiyOvaWNWrkuGUWuMj/7FF/XAMO9XdisjW+F1e4iE9tGMtgo
      JjeJaSXlvAS6Qj6crd30RhrTJV8KVg/9Q9cYa3M3Tns5I5deA0jFFE8WNqjlkiwtCXhbzx4F
      AtiLp/H5fFgspoZOZr4mE1ZlJEUg6PMgKwqms5R0UoknU7MU9w/a1A5/hPHBxqZEZPAGuKIo
      BqvmTMlQez8f2v0k82W66/NUT4PJwfUbb5FJJzA66zLjDGaGh/qZ+eoeCXy8e/t6w9fNVhu9
      3V0s7EZRqiId1ov5+TPJGGuShN94AQJTVeRCir2iQNhrJV+ScJ1DBJcuAKPdy40bb7C/scT6
      XgpJMx3xBFSV2WfPuDY+SaVWplhRcdVFBq6PT1IoVRkZvwm8eA2bBkQTA2OT3B2OnHjYzKNH
      bCRT2M0OIq2hhuUqa5UC0WQKT6gL23HtpJOQK2zuxBkfH2ncZ0GR2NrawuRowasaWNvcYbi3
      cVUEg9mCSchg9ocbxkNeFoqiUEpHyTjOPg7wQlSFna0NttaLePq7aD9rM7KOSxcAAKU4c7NP
      qbr7ENIZ+tvP1g9YezZDNv08M8nsxOttwXwoxm+xObF8u+jqAc427jROa2nAZrHTFoBsSeBg
      NO7oW2pz+Qj7yyzMT7G66uLNWze1pyQfh2Ckkt7k3hcFwpG6gTDRSGfPwPHffc7u9jbeyBDt
      PvvZC4IXocik0mn6br7PgKpgsWtPxzgXgkh7ZzddVLELaVKFGq3HjImchqshALODSO8wqXgS
      u+3snWB/pI8379y+AMee8/VanC9AdDq50z/B8vKy5vHVUp6K4OSd731AMZ/jzNE70UBHdz9l
      RcCusTTMafC6ncwuzZJwODXXBTofKtVykXQ6RTqdRbG4uHXtjPO6XngJha2NNdZXi9h6IoS1
      kubPwKULQCokebK0jcVsxOX14nGdfQeZW2/cvADPzkY+ucdXX31FuVggXajR09cogWxih+Wd
      CoVcms6unqNTtk9DrcjCZpw3b0+8cFLZcTj9YcxbUfL5/LlDiA0oMnu7OwgWJ6LJSscFdIIV
      RcYdGeb7YRWb3Y71HGMAcBWiQIKIKleo1BQsdhf+ljNuoiEI2ql7rxinr5Xh4WEmJibp0WjC
      ZZNRdveTGIxGrFbL2cc7qnmm5xaRS1lm5+bZ2Et8Kz/XlxdZjRUJO6GgMRnuXIgiXl8Qu8WA
      QRDJFTQmFZ4TVa6RyeYoFvI8nnpEoqgxdf0MXHoNYLR5mLxxk2I6ypcPn1BWjVzrbXvxF68Y
      +eQez549w2QQiWdKRNqPjhWYLFba+0aJcDAH5bjk/2MRRGxWK15/AJvVhHLWYMFzQq0dvGG0
      kqkohM8ZQtRwEqVWJF9SUaQKlF/+fnCi2UYkchCMyMT2G1JPz8qlL41Yzezwyy/mcHj8DPZ2
      YHM4j6YbfhdQFZLxKBs7+wQDfqxOLz6340goNB3bYe7pDFVbBHNhh9bJ7zdmpb2Iap5fP1jk
      3VvD3Hs0x3tvnm/i2UtHkanICmaT6VtNaz8NtXyC6fmD7VxDkS66IqEXfONkLl0AilQ5mMb8
      HIv9uygAlVwmRUVSUBWZx3MLvP/euw2LTqV2lpjfrWAq7RK+/j6dLWcUgKqw+myWiiqAzc9I
      z9nb2JnoBnMrO6SSKe5+8EP89bnJTcal371otBAIfPsw1pXh651pBJ7vANNYBra09jBoiFFV
      gwS+Tfz6+SLCgsWOs34N1VNidwcYGLCzszpPsSLpArhsB14PVPK5NPmShCCI3Lh1W3NhrPjW
      Mj/5bJrugBP57u/R2XLGKRlKjUwZ3pw8fnn0F1GrFEmlUjiDPbSetQZ6DdEF8DIQRNo6ek91
      aMTvw2Q3nH3EG0Aw0WJTmJl6hNPfxmDX2ZtAxVyadDaPxSpTq8mYXuo4wHeP5r77V0ghm0I2
      exifdCPJEHSfvQmjqCpef4j1jXVcwreLYFfLJcwODyGv6+zjEK8h+hN4RextLDPz+DHxbBmT
      yYhWH+FECvv8P3/9MTXBQqYsM9D57aIf5XIZk8V2MBZxUaGa7xC6AF4R/ddv88MffIS9lmDm
      6Tx5rYVpT8IR5o9+9B65+A5yucBa/RKSpz2NzUp0e521jS3tBXibjEsPgzYL+1sr7CeyWJ0t
      +PwB/B7nsYvLvghVVZEk6cRtQY9Dkars7mxTVgy0t7c37M/VbOg1wCvCIIoYzVaUWpl4dE97
      659TIgjCt3r5AVbnZygKTsLBQOPmGE2IXgM0GftLMzxLSIR8LXR3d2tuktFM6FGgJqNUlYh0
      9tDpd2K6qIyY7xD6E2gy/MEgq4+/4JPf3COrtQ9wk6ELoMlIJlPsZcv4LDIVPQikN4GaDbPZ
      Sm/Yi2Q0Iei9P70T3EykYruk8wc7rnj8rfjc50mUfj3Qm0BNhN3pxu/34/f7WZm5TzR3MesC
      fZfQm0BNhMXm+GZ1jO6+3rMn5b+G6E0gnaZGLwN0mhpdADpNjS4AnaZGF4BOU6MLQKep0QWg
      09ToAtBpanQB6DQ1ugB0mhpdADpNjS4AnaZGF4BOU6MLQKep0QWg09T8/4kdwss1zzxQAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='statics of a choosen state' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
